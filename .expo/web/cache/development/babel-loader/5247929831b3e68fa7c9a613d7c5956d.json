{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Uqbah\\\\Desktop\\\\FYP\\\\aaa\\\\components\\\\guestlist.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Note from \"./note\";\n\nvar Main = function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      noteArray: [],\n      noteText: ''\n    };\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var notes = this.state.noteArray.map(function (val, key) {\n        return React.createElement(Note, {\n          key: key,\n          keyval: key,\n          val: val,\n          deleteMethod: function deleteMethod() {\n            return _this2.deleteNote(key);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 14\n          }\n        });\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.headerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      }, \"Guest List\")), React.createElement(ScrollView, {\n        style: styles.scrollContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }\n      }, notes), React.createElement(View, {\n        style: styles.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInput,\n        onChangeText: function onChangeText(noteText) {\n          return _this2.setState({\n            noteText: noteText\n          });\n        },\n        value: this.state.noteText,\n        placeholder: \"Task\",\n        placeholder: \"white\",\n        underlineColorAndroid: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: this.addTask.bind(this),\n        style: styles.addButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.addButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }\n      }, \"Add\")));\n    }\n  }, {\n    key: \"addTask\",\n    value: function addTask() {\n      if (this.state.noteText) {\n        var date = new Date();\n        this.state.noteArray.push({\n          'date': date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate(),\n          'note': this.state.noteText\n        });\n        this.setState({\n          noteArray: this.state.noteArray\n        });\n        this.setState({\n          noteText: this.state.noteText\n        });\n      }\n    }\n  }, {\n    key: \"deleteNote\",\n    value: function deleteNote(key) {\n      this.state.noteArray.splice(key, 1);\n      this.setState({\n        noteArray: this.state.noteArray\n      });\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport { Main as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    backgroundColor: '#E91E63',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderBottomWidth: 10,\n    borderBottomColor: '#ddd'\n  },\n  headerText: {\n    color: 'white',\n    fontSize: 18,\n    padding: 26\n  },\n  scrollContainer: {\n    flex: 1,\n    marginBottom: 100\n  },\n  footer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    zIndex: 10\n  },\n  textInput: {\n    alignSelf: 'stretch',\n    color: '#fff',\n    padding: 20,\n    backgroundColor: '#252525',\n    borderTopWidth: 2,\n    borderTopColor: '#ededed'\n  },\n  addButton: {\n    position: 'absolute',\n    zIndex: 11,\n    right: 20,\n    bottom: 90,\n    backgroundColor: '#E91E63',\n    width: 90,\n    height: 90,\n    borderRadius: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 8\n  },\n  addButtonText: {\n    color: '#fff',\n    fontSize: 24\n  }\n});","map":{"version":3,"sources":["C:/Users/Uqbah/Desktop/FYP/aaa/components/guestlist.js"],"names":["React","Note","Main","props","state","noteArray","noteText","notes","map","val","key","deleteNote","styles","container","header","headerText","scrollContainer","footer","textInput","setState","addTask","bind","addButton","addButtonText","date","Date","push","getFullYear","getMonth","getDate","splice","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderBottomWidth","borderBottomColor","color","fontSize","padding","marginBottom","position","bottom","left","right","zIndex","alignSelf","borderTopWidth","borderTopColor","width","height","borderRadius","elevation"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\r\n// import axios from 'axios';\r\n// import { StyleSheet, Text, View, TouchableOpacity, ScrollView, Image, TextInput, Modal } from 'react-native';\r\n// import { Ionicons } from '@expo/vector-icons';\r\n\r\n// // const ViewGuestList = props => (\r\n// //     <TouchableOpacity style={styles.button}>\r\n// //         <View>\r\n// //             <Text style={styles.name}>{props.var.name}</Text>\r\n// //             <Text>{props.var.address}</Text>\r\n// //             <Text>{props.var.foodType}</Text>\r\n// //             <Text>{\"\\n\"}</Text>\r\n// //             <Text style={styles.number}>{props.var.number}</Text>\r\n// //             <Text>{\"\\n\"}</Text>\r\n// //             <Text>Starting from:</Text>\r\n// //             <Text style={styles.price}>Rs. {props.var.minPrice}</Text>\r\n// //         </View>\r\n// //     </TouchableOpacity>\r\n// // )\r\n\r\n// export default class GuestListList extends Component {\r\n//     // constructor(props) {\r\n//     //     super(props);\r\n\r\n//     //     // this.state = { caterers: [] };\r\n//     // }\r\n//     state = { modalVisible: false };\r\n\r\n//     setModalVisible = (visible) => {\r\n//         this.setState({ modalVisible: visible });\r\n//     }\r\n\r\n\r\n//     // componentDidMount() {\r\n//     //     axios.get('http://localhost:3000/api/catererModel')\r\n//     //         .then(response => {\r\n//     //             this.setState({ caterers: response.data })\r\n//     //         })\r\n//     //         .catch((error) => {\r\n//     //             console.log(error);\r\n//     //         })\r\n//     // }\r\n\r\n//     // catererList() {\r\n//     //     return this.state.caterers.map(currentcaterer => {\r\n//     //         return <ViewCaterer var={currentcaterer} key={currentcaterer._id} />;\r\n//     //     })\r\n//     // }\r\n\r\n//     // showModal() {\r\n//     //     const [modalVisible, setModalVisible] = useState(false);\r\n//     //     setModalVisible(true);\r\n\r\n// // }\r\n\r\n// render() {\r\n//     const { modalVisible } = this.state;\r\n//     return (\r\n//         <View style={styles.container}>\r\n//             <ScrollView>\r\n//                 <View style={styles.searchView}>\r\n//                     <TextInput\r\n//                         placeholder=\"Search Guests...\"\r\n//                         style={styles.search}\r\n//                     />\r\n//                     <TouchableOpacity style={styles.searchButton}>\r\n//                         <Text style={styles.searchText}>\r\n//                             <Ionicons name=\"search-outline\" size={20} color=\"white\" />\r\n//                         </Text>\r\n//                     </TouchableOpacity>\r\n//                 </View>\r\n\r\n//                 <View >\r\n//                     <TouchableOpacity\r\n//                         style={styles.modalButton}\r\n//                         onPress={() => { this.setModalVisible(true); }}\r\n//                     >\r\n//                         <View>\r\n//                             <Text>Add new guest</Text>\r\n//                         </View>\r\n//                     </TouchableOpacity>\r\n\r\n//                     <Modal\r\n//                         animationType=\"slide\"\r\n//                         transparent={true}\r\n//                         // visible={modalVisible}\r\n//                         onRequestClose={() => {Alert.alert('Modal has been closed.');}}\r\n//                     >\r\n//                         <Text style={styles.modalTitle}>Enter Guest Information:</Text>\r\n//                         <Text>Guest name:</Text>\r\n//                         <TextInput />\r\n//                         <Text>Number:</Text>\r\n//                         <TextInput />\r\n//                         <Text>Address:</Text>\r\n//                         <TextInput />\r\n//                         {/* <Button onPress={() => }>Save</Button> */}\r\n//                     </Modal>\r\n\r\n//                     {/* {this.catererList()} */}\r\n//                 </View>\r\n//             </ScrollView>\r\n//         </View>\r\n//     );\r\n// }\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//         marginHorizontal: 20,\r\n//         marginTop: 40,\r\n//         marginBottom: 10,\r\n//     },\r\n\r\n//     button: {\r\n//         alignItems: \"left\",\r\n//         width: \"100%\",\r\n//         height: 200,\r\n//         marginTop: 30,\r\n//         justifyContent: \"center\",\r\n//         borderWidth: 1,\r\n//         borderColor: \"black\",\r\n//         paddingHorizontal: 20,\r\n//         paddingVertical: 20,\r\n//     },\r\n\r\n//     modalButton: {\r\n//         // backgroundColor: \"black\",\r\n//     },\r\n\r\n//     modalTitle: {\r\n//         fontSize: 30,\r\n//         fontWeight: \"bold\",\r\n//     },\r\n\r\n//     searchView: {\r\n//         flexDirection: \"row\",\r\n//         justifyContent: \"space-evenly\",\r\n//         alignItems: \"center\",\r\n//     },\r\n\r\n//     search: {\r\n//         height: 40,\r\n//         width: \"80%\",\r\n//         borderColor: \"transparent\",\r\n//         borderWidth: 1,\r\n//         paddingHorizontal: 10,\r\n//         borderRadius: 20,\r\n//         backgroundColor: \"#dddddd\",\r\n//     },\r\n\r\n//     searchButton: {\r\n//         alignItems: \"center\",\r\n//         backgroundColor: \"#980007\",\r\n//         // backgroundColor: \"#e32016\",\r\n//         width: \"15%\",\r\n//         height: 40,\r\n//         justifyContent: \"center\",\r\n//     },\r\n\r\n//     searchText: {\r\n//         color: \"white\",\r\n//         fontSize: 20,\r\n//         fontWeight: 'bold',\r\n//     },\r\n// });\r\n\r\nimport React from 'react';\r\nimport { StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  ScrollView,\r\n  TouchableOpacity } from 'react-native';\r\nimport Note from './note';\r\n\r\nexport default class Main extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      noteArray: [],\r\n      noteText: ''\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    let notes = this.state.noteArray.map((val, key) => {\r\n      return <Note key={key} keyval={key} val={val}\r\n        deleteMethod={() => this.deleteNote(key)}\r\n      />\r\n    })\r\n\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Text style = {styles.headerText}>Guest List</Text>\r\n        </View>\r\n\r\n        <ScrollView style = {styles.scrollContainer}>\r\n          {notes}\r\n        </ScrollView>\r\n\r\n        <View style = {styles.footer}>\r\n          <TextInput\r\n            style = {styles.textInput}\r\n            onChangeText={(noteText)=> this.setState({noteText})}\r\n            value={this.state.noteText}\r\n            placeholder = 'Task'\r\n            placeholder = 'white'\r\n            underlineColorAndroid='transparent'\r\n          >\r\n          </TextInput>\r\n        </View>\r\n\r\n        <TouchableOpacity onPress = {this.addTask.bind(this)} style = {styles.addButton}>\r\n          <Text style = {styles.addButtonText}>Add</Text>\r\n        </TouchableOpacity>\r\n\r\n      </View>\r\n    );\r\n  }\r\n  addTask(){\r\n    if (this.state.noteText) {\r\n      var date = new Date();\r\n      this.state.noteArray.push({\r\n        'date' : date.getFullYear()+\r\n        '/' +(date.getMonth() + 1)+\r\n        '/' + date.getDate(),\r\n        'note':this.state.noteText\r\n      });\r\n\r\n            this.setState({noteArray: this.state.noteArray});\r\n            this.setState({noteText:this.state.noteText});\r\n        }\r\n\r\n  }\r\n\r\n  deleteNote(key){\r\n    this.state.noteArray.splice(key,1);\r\n    this.setState({noteArray:this.state.noteArray});\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  header: {\r\n    backgroundColor: '#E91E63',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderBottomWidth: 10,\r\n    borderBottomColor: '#ddd',\r\n  },\r\n  headerText: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n    padding: 26,\r\n  },\r\n  scrollContainer: {\r\n    flex: 1,\r\n    marginBottom: 100,\r\n  },\r\n  footer: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: 10,\r\n  },\r\n  textInput: {\r\n    alignSelf: 'stretch',\r\n    color: '#fff',\r\n    padding: 20,\r\n    backgroundColor: '#252525',\r\n    borderTopWidth: 2,\r\n    borderTopColor: '#ededed',\r\n  },\r\n  addButton: {\r\n    position: 'absolute',\r\n    zIndex: 11,\r\n    right: 20,\r\n    bottom: 90,\r\n    backgroundColor: '#E91E63',\r\n    width: 90,\r\n    height: 90,\r\n    borderRadius: 50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    elevation: 8,\r\n  },\r\n  addButtonText: {\r\n    color: '#fff',\r\n    fontSize: 24,\r\n  },\r\n});\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}