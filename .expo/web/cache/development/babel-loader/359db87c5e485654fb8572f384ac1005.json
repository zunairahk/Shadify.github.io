{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Uqbah\\\\Desktop\\\\FYP\\\\aaa\\\\components\\\\guestlist.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from 'react-native-modal';\n\nvar GuestListList = function (_Component) {\n  _inherits(GuestListList, _Component);\n\n  var _super = _createSuper(GuestListList);\n\n  function GuestListList() {\n    var _this;\n\n    _classCallCheck(this, GuestListList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      modalVisible: false\n    };\n\n    _this.setModalVisible = function (visible) {\n      _this.setState({\n        modalVisible: visible\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GuestListList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var modalVisible = this.state.modalVisible;\n      return React.createElement(View, {\n        style: styles.centeredView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }\n      }, React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: modalVisible,\n        onRequestClose: function onRequestClose() {\n          Alert.alert(\"Modal has been closed.\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.centeredView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.modalView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.modalText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }\n      }, \"Hello World!\"), React.createElement(TouchableHighlight, {\n        style: _objectSpread(_objectSpread({}, styles.openButton), {}, {\n          backgroundColor: \"#2196F3\"\n        }),\n        onPress: function onPress() {\n          _this2.setModalVisible(!modalVisible);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }, \"Hide Modal\"))))), React.createElement(TouchableHighlight, {\n        style: styles.openButton,\n        onPress: function onPress() {\n          _this2.setModalVisible(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }\n      }, \"Show Modal\")));\n    }\n  }]);\n\n  return GuestListList;\n}(Component);\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default GuestListList;","map":{"version":3,"sources":["C:/Users/Uqbah/Desktop/FYP/aaa/components/guestlist.js"],"names":["React","Component","Modal","GuestListList","state","modalVisible","setModalVisible","visible","setState","styles","centeredView","Alert","alert","modalView","modalText","openButton","backgroundColor","textStyle","StyleSheet","create","flex","justifyContent","alignItems","marginTop","margin","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","marginBottom"],"mappings":"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","sourcesContent":["// import React from 'react';\r\n// import {\r\n//   StyleSheet,\r\n//   Text,\r\n//   View,\r\n//   TextInput,\r\n//   ScrollView,\r\n//   TouchableOpacity\r\n// } from 'react-native';\r\n// import Note from './note';\r\n\r\n// export default class Main extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       noteArray: [],\r\n//       noteText: ''\r\n//     }\r\n//   }\r\n//   render() {\r\n//     let notes = this.state.noteArray.map((val, key) => {\r\n//       return <Note key={key} keyval={key} val={val}\r\n//         deleteMethod={() => this.deleteNote(key)}\r\n//       />\r\n//     })\r\n//     return (\r\n//       <View style={styles.container}>\r\n//         <ScrollView style={styles.scrollContainer}>\r\n//           {notes}\r\n//         </ScrollView>\r\n\r\n//         <View style={styles.footer}>\r\n//           <TextInput\r\n//             style={styles.textInput}\r\n//             onChangeText={(noteText) => this.setState({ noteText })}\r\n//             value={this.state.noteText}\r\n//             placeholder='Task'\r\n//             // placeholder = 'white'\r\n//             underlineColorAndroid='transparent'\r\n//           >\r\n//           </TextInput>\r\n//         </View>\r\n\r\n//         <TouchableOpacity onPress={this.addTask.bind(this)} style={styles.addButton}>\r\n//           <Text style={styles.addButtonText}>Add</Text>\r\n//         </TouchableOpacity>\r\n\r\n//       </View>\r\n//     );\r\n//   }\r\n//   addTask() {\r\n//     if (this.state.noteText) {\r\n//       var date = new Date();\r\n//       this.state.noteArray.push({\r\n//         'note': this.state.noteText\r\n//       });\r\n\r\n//       this.setState({ noteArray: this.state.noteArray });\r\n//       this.setState({ noteText: this.state.noteText });\r\n//     }\r\n//   }\r\n\r\n//   deleteNote(key) {\r\n//     this.state.noteArray.splice(key, 1);\r\n//     this.setState({ noteArray: this.state.noteArray });\r\n//   }\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//   },\r\n//   header: {\r\n//     backgroundColor: '#980007',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//     borderBottomWidth: 10,\r\n//     borderBottomColor: '#ddd',\r\n//   },\r\n//   headerText: {\r\n//     color: 'white',\r\n//     fontSize: 18,\r\n//     padding: 26,\r\n//   },\r\n//   scrollContainer: {\r\n//     flex: 1,\r\n//     marginBottom: 100,\r\n//   },\r\n//   footer: {\r\n//     position: 'absolute',\r\n//     bottom: 0,\r\n//     left: 0,\r\n//     right: 0,\r\n//     zIndex: 10,\r\n//   },\r\n//   textInput: {\r\n//     alignSelf: 'stretch',\r\n//     color: '#fff',\r\n//     padding: 20,\r\n//     backgroundColor: '#252525',\r\n//     borderTopWidth: 2,\r\n//     borderTopColor: '#ededed',\r\n//   },\r\n//   addButton: {\r\n//     position: 'absolute',\r\n//     zIndex: 11,\r\n//     right: 20,\r\n//     bottom: 90,\r\n//     backgroundColor: '#980007',\r\n//     width: 90,\r\n//     height: 90,\r\n//     borderRadius: 50,\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//     elevation: 8,\r\n//   },\r\n//   addButtonText: {\r\n//     color: '#fff',\r\n//     fontSize: 24,\r\n//   },\r\n// });\r\n\r\n\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Alert,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableHighlight,\r\n  View\r\n} from \"react-native\";\r\nimport Modal from 'react-native-modal';\r\n\r\nclass GuestListList extends Component {\r\n  state = {\r\n    modalVisible: false\r\n  };\r\n\r\n  setModalVisible = (visible) => {\r\n    this.setState({ modalVisible: visible });\r\n  }\r\n\r\n  render() {\r\n    const { modalVisible } = this.state;\r\n    return (\r\n      <View style={styles.centeredView}>\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={modalVisible}\r\n          onRequestClose={() => {\r\n            Alert.alert(\"Modal has been closed.\");\r\n          }}\r\n        >\r\n          <View style={styles.centeredView}>\r\n            <View style={styles.modalView}>\r\n              <Text style={styles.modalText}>Hello World!</Text>\r\n\r\n              <TouchableHighlight\r\n                style={{ ...styles.openButton, backgroundColor: \"#2196F3\" }}\r\n                onPress={() => {\r\n                  this.setModalVisible(!modalVisible);\r\n                }}\r\n              >\r\n                <Text style={styles.textStyle}>Hide Modal</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        <TouchableHighlight\r\n          style={styles.openButton}\r\n          onPress={() => {\r\n            this.setModalVisible(true);\r\n          }}\r\n        >\r\n          <Text style={styles.textStyle}>Show Modal</Text>\r\n        </TouchableHighlight>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5\r\n  },\r\n  openButton: {\r\n    backgroundColor: \"#F194FF\",\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\"\r\n  }\r\n});\r\n\r\nexport default GuestListList;"]},"metadata":{},"sourceType":"module"}