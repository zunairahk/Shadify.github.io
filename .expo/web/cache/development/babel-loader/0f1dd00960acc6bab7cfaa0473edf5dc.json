{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Uqbah\\\\Desktop\\\\FYP\\\\aaa\\\\components\\\\home.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this.state = {\n      isVisible: false\n    };\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"setVisibility\",\n    value: function setVisibility(visible) {\n      this.setState({\n        isVisible: visible\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 8\n        }\n      }, React.createElement(Modal, {\n        transparent: true,\n        visible: this.state.isVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 10\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 12\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 14\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 16\n        }\n      }, \"Demo Modal!\"), React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this2.setVisibility(!_this2.state.isVisible);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 18\n        }\n      }, \"Hide\"))))), React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this2.setVisibility(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 12\n        }\n      }, \"Show\")));\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nexport { HomeScreen as default };","map":{"version":3,"sources":["C:/Users/Uqbah/Desktop/FYP/aaa/components/home.js"],"names":["React","Component","HomeScreen","props","state","isVisible","visible","setState","setVisibility"],"mappings":";;;;;;;;;;;AAmGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;IAGsBC,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,UAAKC,KAAL,GAAa;AACfC,MAAAA,SAAS,EAAE;AADI,KAAb;AADkB;AAIlB;;;;kCACaC,O,EAAS;AACrB,WAAKC,QAAL,CAAc;AAACF,QAAAA,SAAS,EAAEC;AAAZ,OAAd;AACD;;;6BACS;AAAA;;AACR,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,WAAW,MAAlB;AAAmB,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEG,oBAAC,kBAAD;AACC,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACG,aAAL,CAAmB,CAAC,MAAI,CAACJ,KAAL,CAAWC,SAA/B;AAA4C,SAD9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,CAFH,CADF,CADF,CADF,EAYG,oBAAC,kBAAD;AAAoB,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACG,aAAL,CAAmB,IAAnB;AAA2B,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,CAZH,CADF;AAkBD;;;;EA5BqCP,S;;SAAnBC,U","sourcesContent":["// import React, {useState} from 'react';\r\n// import { Alert, Modal, Pressable, View, Text, StyleSheet, Button } from 'react-native';\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//   },\r\n//   centeredView: {\r\n//     flex: 1,\r\n//     justifyContent: \"center\",\r\n//     alignItems: \"center\",\r\n//     marginTop: 22\r\n//   },\r\n//   modalView: {\r\n//     margin: 20,\r\n//     backgroundColor: \"white\",\r\n//     borderRadius: 20,\r\n//     padding: 35,\r\n//     alignItems: \"center\",\r\n//     shadowColor: \"#000\",\r\n//     shadowOffset: {\r\n//       width: 0,\r\n//       height: 2\r\n//     },\r\n//     shadowOpacity: 0.25,\r\n//     shadowRadius: 4,\r\n//     elevation: 5\r\n//   },\r\n//   button: {\r\n//     borderRadius: 20,\r\n//     padding: 10,\r\n//     elevation: 2\r\n//   },\r\n//   buttonOpen: {\r\n//     backgroundColor: \"#F194FF\",\r\n//   },\r\n//   buttonClose: {\r\n//     backgroundColor: \"#2196F3\",\r\n//   },\r\n//   textStyle: {\r\n//     color: \"white\",\r\n//     fontWeight: \"bold\",\r\n//     textAlign: \"center\"\r\n//   },\r\n//   modalText: {\r\n//     marginBottom: 15,\r\n//     textAlign: \"center\"\r\n//   }\r\n// });\r\n\r\n// const HomeScreen = ({ navigation }) => {\r\n//   const [modalVisible, setModalVisible] = useState(false);\r\n//   return (\r\n//     <View style={styles.centeredView}>\r\n//       <Modal\r\n//         animationType=\"slide\"\r\n//         transparent={true}\r\n//         visible={modalVisible}\r\n//         onRequestClose={() => {\r\n//           Alert.alert(\"Modal has been closed.\");\r\n//           setModalVisible(!modalVisible);\r\n//         }}\r\n//       >\r\n//         <View style={styles.centeredView}>\r\n//           <View style={styles.modalView}>\r\n//             <Text style={styles.modalText}>Hello World!</Text>\r\n//             <Pressable\r\n//               style={[styles.button, styles.buttonClose]}\r\n//               onPress={() => setModalVisible(!modalVisible)}\r\n//             >\r\n//               <Text style={styles.textStyle}>Hide Modal</Text>\r\n//             </Pressable>\r\n//           </View>\r\n//         </View>\r\n//       </Modal>\r\n//       <Pressable\r\n//         style={[styles.button, styles.buttonOpen]}\r\n//         onPress={() => setModalVisible(true)}\r\n//       >\r\n//         <Text style={styles.textStyle}>Show Modal</Text>\r\n//       </Pressable>\r\n//     </View>\r\n//     // <View style={styles.container}>\r\n//     //   <Button\r\n//     //     title=\"Go to Vendors\"\r\n//     //     onPress={() => navigation.navigate('Vendor')}\r\n//     //   />\r\n//     //   <Button\r\n//     //     title=\"Go to Guest List\"\r\n//     //     onPress={() => navigation.navigate('GuestList')}\r\n//     //   />\r\n//     // </View>\r\n//   );\r\n// };\r\n\r\n// export default HomeScreen;\r\n\r\nimport React, { Component } from 'react';\r\nimport { StyleSheet, Text,Modal, View, TouchableOpacity, ScrollView, Image, TextInput } from 'react-native';\r\n\r\n export default class HomeScreen extends Component {\r\n   constructor(props) {\r\n   \tthis.state = {\r\n\t\tisVisible: false,\r\n};\r\n   }\r\n   setVisibility(visible) {\r\n     this.setState({isVisible: visible});\r\n   }\r\n    render() {\r\n     return (\r\n       <View>\r\n         <Modal transparent visible={this.state.isVisible}>\r\n           <View>\r\n             <View>\r\n               <Text>Demo Modal!</Text>\r\n                <TouchableHighlight\r\n                 onPress={() => { this.setVisibility(!this.state.isVisible); }}>\r\n                 <Text>Hide</Text>\r\n               </TouchableHighlight>\r\n             </View>\r\n           </View>\r\n         </Modal>\r\n          <TouchableHighlight onPress={() => { this.setVisibility(true); }}>\r\n           <Text>Show</Text>\r\n         </TouchableHighlight>\r\n       </View>\r\n     );\r\n   }\r\n }"]},"metadata":{},"sourceType":"module"}